import matplotlib.pyplot as plt
import numpy as np
from skimage.morphology import convex_hull_image
import cv2
import matplotlib


def ResizeWithAspectRatio(image, width=None, height=None, inter=cv2.INTER_AREA):
    dim = None
    (h, w) = image.shape[:2]

    if width is None and height is None:
        return image
    if width is None:
        r = height / float(h)
        dim = (int(w * r), height)
    else:
        r = width / float(w)
        dim = (width, int(h * r))

    return cv2.resize(image, dim, interpolation=inter)


a = cv2.imread("G:\\My Drive\\doutorado\\projeto\\dados\\imagens\\exp01\\raizes\\100NIKON\\DSCN8473.JPG")

imA = a[110:3000, 450:3025] #Cropping image 

resize = ResizeWithAspectRatio(imA, width=600)

cv2.destroyAllWindows()
cv2.imshow("HSV Image", resize)
cv2.waitKey()



lower_green = np.array([50,50,50])
upper_green = np.array([255,255,255])
hsv_img = cv2.cvtColor(imA, cv2.COLOR_BGR2HSV)

masking = cv2.inRange(hsv_img, lower_green, upper_green)
masking = ResizeWithAspectRatio(masking, width=1280)

imA=np.invert(imA)


#cv2.imshow("Original Image", imA)



hsv_imgA = cv2.cvtColor(imA, cv2.COLOR_BGR2HSV)

maskingA = cv2.inRange(hsv_imgA, lower_green, upper_green)
cv2.destroyAllWindows()
cv2.waitKey()

# The original image is inverted as the object must be white.
image = maskingA

chull = convex_hull_image(image)

fig, axes = plt.subplots(1, 2, figsize=(8, 4))
ax = axes.ravel()

ax[0].set_title('Original picture')
ax[0].imshow(image, cmap=plt.cm.gray, interpolation='nearest')
ax[0].set_axis_off()

ax[1].set_title('Transformed picture')
ax[1].imshow(chull, cmap=plt.cm.gray, interpolation='nearest')
ax[1].set_axis_off()

plt.tight_layout()
plt.show()




# The original image is inverted as the object must be white.

chull = convex_hull_image(image)


fig, axes = plt.subplots(1, 2, figsize=(8, 4))
ax = axes.ravel()

ax[0].set_title('Original picture')
ax[0].imshow(image, cmap=plt.cm.gray, interpolation='nearest')
ax[0].set_axis_off()

ax[1].set_title('Transformed picture')
ax[1].imshow(chull, cmap=plt.cm.gray, interpolation='nearest')
ax[1].set_axis_off()

plt.tight_layout()
plt.show()

asd=plt.imshow(chull, cmap=plt.cm.gray, interpolation='nearest')



import matplotlib
import matplotlib.pyplot as plt
import numpy as np


plt.imshow(chull, cmap=plt.cm.gray, interpolation='nearest')

fig.savefig('plot.png')

